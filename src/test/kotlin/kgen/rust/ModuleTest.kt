package kgen.rust

import org.junit.jupiter.api.Test

import org.junit.jupiter.api.Assertions.*

internal class ModuleTest {

    @Test
    fun getAsRust() {

        assertEquals(
            """
/// TODO: Document Module(m1)
////////////////////////////////////////////////////////////////////////////////////
// --- macro-use imports ---
////////////////////////////////////////////////////////////////////////////////////
#[macro_use]
extern crate serde_derive;
////////////////////////////////////////////////////////////////////////////////////
// --- test-macro-use imports ---
////////////////////////////////////////////////////////////////////////////////////
#[cfg(test)]
#[macro_use]
extern crate tester;
////////////////////////////////////////////////////////////////////////////////////
// --- module uses ---
////////////////////////////////////////////////////////////////////////////////////
use crate::time_revalue::{Revalue, RevalueOn};
////////////////////////////////////////////////////////////////////////////////////
// --- structs ---
////////////////////////////////////////////////////////////////////////////////////
/// S struct
struct S {
}
""".trimIndent(),
            Module(
                "m1",
                visibility = Visibility.PubCrate,
                macroUses = listOf("serde_derive"),
                testMacroUses = listOf("tester"),
                structs = listOf(
                    Struct("s", "S struct")
                ),
                uses = listOf(Use("crate::time_revalue::{Revalue, RevalueOn}"))
            ).asRust
        )

    }
}